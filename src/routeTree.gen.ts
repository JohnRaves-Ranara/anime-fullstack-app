/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AnimeRouteImport } from './routes/anime/route'
import { Route as IndexImport } from './routes/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as AnimeIndexImport } from './routes/anime/index'
import { Route as AnimeInfoIndexImport } from './routes/anime/info/index'
import { Route as AnimeInfoAnimeIdIndexImport } from './routes/anime/info/$animeId/index'

// Create/Update Routes

const AnimeRouteRoute = AnimeRouteImport.update({
  path: '/anime',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const AnimeIndexRoute = AnimeIndexImport.update({
  path: '/',
  getParentRoute: () => AnimeRouteRoute,
} as any)

const AnimeInfoIndexRoute = AnimeInfoIndexImport.update({
  path: '/info/',
  getParentRoute: () => AnimeRouteRoute,
} as any)

const AnimeInfoAnimeIdIndexRoute = AnimeInfoAnimeIdIndexImport.update({
  path: '/info/$animeId/',
  getParentRoute: () => AnimeRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/anime': {
      id: '/anime'
      path: '/anime'
      fullPath: '/anime'
      preLoaderRoute: typeof AnimeRouteImport
      parentRoute: typeof rootRoute
    }
    '/anime/': {
      id: '/anime/'
      path: '/'
      fullPath: '/anime/'
      preLoaderRoute: typeof AnimeIndexImport
      parentRoute: typeof AnimeRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/anime/info/': {
      id: '/anime/info/'
      path: '/info'
      fullPath: '/anime/info'
      preLoaderRoute: typeof AnimeInfoIndexImport
      parentRoute: typeof AnimeRouteImport
    }
    '/anime/info/$animeId/': {
      id: '/anime/info/$animeId/'
      path: '/info/$animeId'
      fullPath: '/anime/info/$animeId'
      preLoaderRoute: typeof AnimeInfoAnimeIdIndexImport
      parentRoute: typeof AnimeRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AnimeRouteRoute: AnimeRouteRoute.addChildren({
    AnimeIndexRoute,
    AnimeInfoIndexRoute,
    AnimeInfoAnimeIdIndexRoute,
  }),
  LoginIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/anime",
        "/login/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/anime": {
      "filePath": "anime/route.tsx",
      "children": [
        "/anime/",
        "/anime/info/",
        "/anime/info/$animeId/"
      ]
    },
    "/anime/": {
      "filePath": "anime/index.tsx",
      "parent": "/anime"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/anime/info/": {
      "filePath": "anime/info/index.tsx",
      "parent": "/anime"
    },
    "/anime/info/$animeId/": {
      "filePath": "anime/info/$animeId/index.tsx",
      "parent": "/anime"
    }
  }
}
ROUTE_MANIFEST_END */
